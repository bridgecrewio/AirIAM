name: build-and-test

on:
  push:
    branches:
      - master
jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - uses: dschep/install-pipenv-action@v1
      - name: Install dependencies
        run: |
          pipenv install --dev
      - name: Test with pytest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pipenv run python -m coverage run -m pytest
          pipenv run python -m coverage report
          pipenv run python -m coverage html
      - name: Update coverage badge
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          pipenv run python -m coverage_badge -o coverage.svg -f
          git add coverage.svg
          git commit -m "Update coverage" coverage.svg || echo "No changes to commit"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  bump-version:
    needs: coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - uses: dschep/install-pipenv-action@v1
      - name: Install dependencies
        run: |
          pipenv install --dev
      - name: update docs and bump version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "latest tag: $latest_tag"
          new_tag=$(echo $latest_tag | awk -F. -v a="$1" -v b="$2" -v c="$3" '{printf("%d.%d.%d", $1+a, $2+b , $3+1)}')
          echo "new tag: $new_tag"

          ## update docs
          export PYTHONPATH='.'
          export scansdoc=docs/3.Scans/resource-scans.md
          echo "---" > $scansdoc
          echo "layout: default" >> $scansdoc
          echo "title: Resource scans" >> $scansdoc
          echo "nav_order: 1" >> $scansdoc
          echo "---" >> $scansdoc
          echo "" >> $scansdoc
          echo "# Resource scans (auto generated)" >> $scansdoc
          echo "" >> $scansdoc
          git pull
          ## update python version
          echo "version = '$new_tag'" > 'airiam/version.py'
          git commit -m "bump version" airiam/version.py || echo "No changes to commit"
          git push origin
          git tag $new_tag
          git push origin $new_tag
    publish-package:
      needs: bump-version
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@master
        - name: Set up Python 3.7
          uses: actions/setup-python@v1
          with:
            python-version: 3.7
        - uses: dschep/install-pipenv-action@v1
        - name: Install dependencies
          run: |
            pipenv install --dev
        - name: create python package
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git fetch --tags
            git pull
            pipenv run python setup.py sdist bdist_wheel
        - name: Publish a Python distribution to PyPI
          uses: pypa/gh-action-pypi-publish@master
          with:
            user: __token__
            password: ${{ secrets.pypi_password }}